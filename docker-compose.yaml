version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - badesaba-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2434127reza
      POSTGRES_DB: badesaba
    ports:
      - '5434:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - badesaba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-badesaba
    restart: always
    ports:
      - '6378:6379'
    volumes:
      - redis_data:/data
    networks:
      - badesaba-network

  api-gateway:
    image: api-gateway-badesaba
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      user-service:
        condition: service_started
      auth-service:
        condition: service_started
      referral-service:
        condition: service_started
      spinner-microservice:
        condition: service_started
      score-microservice:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network
    command: >
      sh -c "npm run migration:run && npm run start:dev api-gateway"

  user-service:
    image: user-service
    build:
      context: .
      dockerfile: ./apps/user-microservice/Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network

  auth-service:
    image: auth-service
    build:
      context: .
      dockerfile: ./apps/auth-microservice/Dockerfile
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network

  referral-service:
    image: referral-service
    build:
      context: .
      dockerfile: ./apps/referral-microservice/Dockerfile
    ports:
      - '3003:3003'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network

  score-microservice:
    image: score-microservice
    build:
      context: .
      dockerfile: ./apps/score-microservice/Dockerfile
    ports:
      - '3004:3004'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network

  spinner-microservice:
    image: spinner-microservice
    build:
      context: .
      dockerfile: ./apps/spinner-microservice/Dockerfile
    ports:
      - '3005:3005'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - badesaba-network

  payment-microservice:
    image: payment-microservice
    build:
      context: .
      dockerfile: ./apps/payment-microservice/Dockerfile
    ports:
      - '3006:3006'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - badesaba-network

networks:
  badesaba-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
